apply plugin: 'maven-publish'

def isReleaseBuild() {
    return VERSION_NAME.toUpperCase().contains("SNAPSHOT") == false
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

def getRepositoryUrl() {
    return isReleaseBuild() ? RELEASE_REPOSITORY_URL : SNAPSHOT_REPOSITORY_URL
}

afterEvaluate {
    publishing {
        publications {
            Production(MavenPublication) {
                from components.java

                groupId = GROUP
                artifactId = POM_ARTIFACT_ID
                version = VERSION_NAME
                // 上传source，这样使用放可以看到方法注释
//                artifact generateSourcesJar
            }

            // Creates a Maven publication called "release".
            /*release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = GROUP//
                artifactId = POM_ARTIFACT_ID
                version = VERSION_NAME
                artifact generateSourcesJar

            }*/
            // Creates a Maven publication called “debug”.
            /*debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug

                groupId = 'com.example.MyLibrary'
                artifactId = 'final-debug'
                version = '1.0'
            }*/
        }
        repositories {
            // 定义一个 maven 仓库
            maven {
                // 可以有且仅有一个仓库不指定 name 属性，会隐式设置为 Maven
                // 根据 versionName 来判断仓库地址
                allowInsecureProtocol = true
                url = getRepositoryUrl()

                // 仓库用户名密码
                credentials {
                    username = getRepositoryUsername()
                    password = getRepositoryPassword()
                }
            }
            /*// 定义第二个 maven 仓库，名为 Nexus
            maven {
                // 必须显示指定 name
                name = "nexus"
                url = versionName.endsWith('SNAPSHOT') ? SNAPSHOT_REPOSITORY_URL : RELEASE_REPOSITORY_URL
            }*/
        }
    }

    /*task androidJavadocs(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }
    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.sourceFiles
    }
*/
    //解决 JavaDoc 中文注释生成失败的问题
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }
    /*artifacts {
        archives androidSourcesJar
        archives androidJavadocsJar
    }*/
}